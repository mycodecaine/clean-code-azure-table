name: .NET Build, Test, and Publish Coverage

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.x' # Use .NET 8

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test with coverage
        run: dotnet test --no-build --configuration Release /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=./coverage/

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: cobertura-coverage-report
          path: ./coverage/coverage.cobertura.xml

      - name: Publish code coverage results
        uses: dorny/paths-filter@v2
        with:
          filters: |
            code-coverage:
              - 'coverage/**/*.xml'
        id: filter

      - name: Publish code coverage summary
        if: steps.filter.outputs.code-coverage == 'true'
        run: |
          echo "## Code Coverage Report" > code-coverage-summary.md
          echo "" >> code-coverage-summary.md
          echo "### Cobertura Report" >> code-coverage-summary.md
          echo "" >> code-coverage-summary.md
          cat ./coverage/coverage.cobertura.xml >> code-coverage-summary.md
        shell: bash

      - name: Upload coverage summary
        if: steps.filter.outputs.code-coverage == 'true'
        uses: actions/upload-artifact@v3
        with:
          name: code-coverage-summary
          path: code-coverage-summary.md
